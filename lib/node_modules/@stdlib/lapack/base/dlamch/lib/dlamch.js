/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var EPS = require( '@stdlib/constants/float64/eps' );
var SMALLEST_NORMAL = require( '@stdlib/constants/float64/smallest-normal' );
var MIN_EXPONENT = require( '@stdlib/constants/float64/min-base2-exponent' );
var MAX_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent' );


// VARIABLES //

var DIGITS_ZERO = 53;
var RADIX_ZERO = 2.0;
var HUGE_ZERO = 1.7976931348623157E+308;


// MAIN //

/**
* Determines double precision machine parameters.
*
* @param {string} cmach - specifies the value to be returned
* @returns {number} machine parameter
*
* @example
* var out = dlamch( 'E' );
* // returns ~1.1102230246251565E-016
*
* out = dlamch( 'S' );
* // returns ~2.2250738585072014E-308
*
* out = dlamch( 'B' );
* // returns 2.0
*/
function dlamch( cmach ) {
	var sfmin;
	var small;
	var eps;
	var rnd;

	rnd = 1.0;
	if ( rnd === 1.0 ) {
		eps = EPS * 0.5;
	} else {
		eps = EPS;
	}

	if ( cmach === 'E' ) {
		return eps;
	}
	if ( cmach === 'S' ) {
		sfmin = SMALLEST_NORMAL;
		small = 1.0 / HUGE_ZERO;
		if ( small >= sfmin ) {
			sfmin = small * ( 1.0 + eps );
		}
		return sfmin;
	}
	if ( cmach === 'B' ) {
		return RADIX_ZERO;
	}
	if ( cmach === 'P' ) {
		return eps * RADIX_ZERO;
	}
	if ( cmach === 'N' ) {
		return DIGITS_ZERO;
	}
	if ( cmach === 'R' ) {
		return rnd;
	}
	if ( cmach === 'M' ) {
		return MIN_EXPONENT + 1;
	}
	if ( cmach === 'U' ) {
		return SMALLEST_NORMAL;
	}
	if ( cmach === 'L' ) {
		return MAX_EXPONENT + 1;
	}
	if ( cmach === 'O' ) {
		return HUGE_ZERO;
	}
	return 0.0;
}


// EXPORTS //

module.exports = dlamch;
