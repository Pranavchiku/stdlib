!>
! @license Apache-2.0
!
! Copyright (c) 2023 The Stdlib Authors.
!
! Licensed under the Apache License, Version 2.0 (the "License");
! you may not use this file except in compliance with the License.
! You may obtain a copy of the License at
!
!    http://www.apache.org/licenses/LICENSE-2.0
!
! Unless required by applicable law or agreed to in writing, software
! distributed under the License is distributed on an "AS IS" BASIS,
! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
! See the License for the specific language governing permissions and
! limitations under the License.
!<

!> Constructs a Given plane rotation for single-precision values.
!
! ## Notes
!
! * Modified version of reference BLAS level1 routine (version 3.7.0). Updated to "free form" Fortran 95.
!
! ## Authors
!
! * Edward Anderson
! * Lockheed Martin
!
! ## Contributors
!
! * Weslley Pereira
! * University of Colorado Denver, USA
!
! ## History
!
! * Anderson E. (2017).
!
!   - Algorithm 978: Safe Scaling in the Level 1 BLAS.
!   - ACM Trans Math Softw 44:1--28
!   - https://doi.org/10.1145/3061665
!
! ## License
!
! From <http://netlib.org/blas/faq.html>:
!
! > The reference BLAS is a freely-available software package. It is available from netlib via anonymous ftp and the World Wide Web. Thus, it can be included in commercial software packages (and has been). We only ask that proper credit be given to the authors.
! >
! > Like all software, it is copyrighted. It is not trademarked, but we do ask the following:
! >
! > * If you modify the source for these routines we ask that you change the name of the routine and comment the changes made to the original.
! >
! > * We will gladly answer any questions regarding the software. If a modification is done, however, it is the responsibility of the person who modified the routine to provide support.
!
! @param {real} A - rotational elimination parameter
! @param {real} B - rotational elimination parameter
! @param {real} C - cosine of angle of rotation.
! @param {real} S - sine of angle of rotation.
!<
subroutine srotg( A, B, C, S )
    implicit none
    ! ..
    ! Constants:
    integer, parameter :: wp = kind(1.e0)
    real(wp), parameter :: zero = 0.0_wp
    real(wp), parameter :: one = 1.0_wp
    !
    ! Scaling constants:
    real(wp), parameter :: safmin = real(radix(0._wp),wp)**max( &
        minexponent(0._wp)-1, &
        1-maxexponent(0._wp) &
    )
    real(wp), parameter :: safmax = real(radix(0._wp),wp)**max( &
        1-minexponent(0._wp), &
        maxexponent(0._wp)-1 &
    )
    ! ..
    ! Scalar arguments:
    real(wp) :: A, B, C, S
    ! ..
    ! Local Scalars:
    real(wp) :: anorm, bnorm, scl, sigma, r, z
    ! ..
    anorm = abs(A)
    bnorm = abs(B)
    if ( bnorm == zero ) then
        C = one
        S = zero
        B = zero
    else if ( anorm == zero ) then
        C = zero
        S = one
        A = b
        B = one
    else
        scl = min( safmax, max( safmin, anorm, bnorm ) )
        if( anorm > bnorm ) then
            sigma = sign(one,A)
        else
            sigma = sign(one,B)
        end if
            r = sigma*( scl*sqrt((A/scl)**2 + (B/scl)**2) )
            C = A/r
            S = B/r
        if( anorm > bnorm ) then
            Z = S
        else if( C /= zero ) then
            Z = one/C
        else
            Z = one
        end if
            Z = r
            B = Z
    end if
    
end subroutine
